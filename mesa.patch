diff --git meson.build meson.build
index 250b528..5e9e617 100644
--- meson.build
+++ meson.build
@@ -1523,7 +1523,7 @@ if cc.links('int main() { return 0; }',
             args : '-Wl,--version-script=@0@'.format(
               join_paths(meson.source_root(), 'build-support/conftest.map')),
             name : 'version-script')
-  with_ld_version_script = true
+  with_ld_version_script = false
 endif
 with_ld_dynamic_list = false
 if cc.links('int main() { return 0; }',
@@ -1710,7 +1710,7 @@ if dep_libudev.found()
   pre_args += '-DHAVE_LIBUDEV'
 endif
 
-llvm_modules = ['bitwriter', 'engine', 'mcdisassembler', 'mcjit', 'core', 'executionengine', 'scalaropts', 'transformutils', 'instcombine']
+llvm_modules = ['bitwriter', 'engine', 'mcdisassembler', 'mcjit', 'core', 'executionengine', 'scalaropts', 'transformutils', 'instcombine', 'passes']
 llvm_optional_modules = ['coroutines']
 if with_amd_vk or with_gallium_radeonsi or with_gallium_r600
   llvm_modules += ['amdgpu', 'bitreader', 'ipo']
diff --git src/gallium/auxiliary/tgsi/tgsi_ureg.c src/gallium/auxiliary/tgsi/tgsi_ureg.c
index eedba34..06d8086 100644
--- src/gallium/auxiliary/tgsi/tgsi_ureg.c
+++ src/gallium/auxiliary/tgsi/tgsi_ureg.c
@@ -474,7 +474,7 @@ out:
 
 struct ureg_dst
 ureg_DECL_output_masked(struct ureg_program *ureg,
-                        unsigned name,
+                        enum tgsi_semantic name,
                         unsigned index,
                         unsigned usage_mask,
                         unsigned array_id,
diff --git src/gallium/drivers/llvmpipe/lp_tex_sample.h src/gallium/drivers/llvmpipe/lp_tex_sample.h
index 51813ea..652f0fc 100644
--- src/gallium/drivers/llvmpipe/lp_tex_sample.h
+++ src/gallium/drivers/llvmpipe/lp_tex_sample.h
@@ -38,7 +38,7 @@ struct lp_image_static_state;
 /**
  * Whether texture cache is used for s3tc textures.
  */
-#define LP_USE_TEXTURE_CACHE 0
+#define LP_USE_TEXTURE_CACHE 1
 
 /**
  * Pure-LLVM texture sampling code generator.
diff --git src/gallium/frontends/wgl/stw_device.c src/gallium/frontends/wgl/stw_device.c
index 8ffe752..825d05f 100644
--- src/gallium/frontends/wgl/stw_device.c
+++ src/gallium/frontends/wgl/stw_device.c
@@ -248,7 +248,7 @@ stw_cleanup(void)
    FREE(stw_dev->smapi);
    stw_dev->stapi->destroy(stw_dev->stapi);
 
-   stw_dev->screen->destroy(stw_dev->screen);
+   if (stw_dev->screen) stw_dev->screen->destroy(stw_dev->screen);
 
    /* glapi is statically linked: we can call the local destroy function. */
 #ifdef _GLAPI_NO_EXPORTS
diff --git src/gallium/targets/libgl-gdi/meson.build src/gallium/targets/libgl-gdi/meson.build
index 7ddcd8a..8658196 100644
--- src/gallium/targets/libgl-gdi/meson.build
+++ src/gallium/targets/libgl-gdi/meson.build
@@ -40,6 +40,7 @@ libopengl32 = shared_library(
   link_with : [
     libgallium_wgl, libglapi_bridge, libglapi
   ],
+  link_whole : [ libgallium_wgl ],
   dependencies : [
     idep_mesautil
   ],
diff --git src/gallium/targets/wgl/meson.build src/gallium/targets/wgl/meson.build
index 2999ee5..8b92387 100644
--- src/gallium/targets/wgl/meson.build
+++ src/gallium/targets/wgl/meson.build
@@ -30,10 +30,9 @@ wgl_def = custom_target(
              '--compiler_id', cc.get_argument_syntax(), '--cpu_family', host_machine.cpu_family()]
 )
 
-libgallium_wgl = shared_library(
+libgallium_wgl = static_library(
   'gallium_wgl',
   ['wgl.c'],
-  vs_module_defs : wgl_def,
   include_directories : [
     inc_include, inc_src, inc_mapi, inc_mesa, inc_gallium, inc_gallium_aux, inc_wgl, inc_gallium_winsys, inc_gallium_winsys_sw, inc_gallium_drivers,
   ],
diff --git src/util/futex.h src/util/futex.h
index 2a2a00c..5aff5ef 100644
--- src/util/futex.h
+++ src/util/futex.h
@@ -117,7 +117,7 @@ static inline int futex_wait(uint32_t *addr, int32_t value, const struct timespe
    return futex(addr, FUTEX_WAIT, value, &tsrel, NULL);
 }
 
-#elif defined(_WIN32) && !defined(WINDOWS_NO_FUTEX)
+#elif defined(_WIN32) && 0
 #define UTIL_FUTEX_SUPPORTED 1
 
 #include <windows.h>
